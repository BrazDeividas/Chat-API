plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'nu.studer.jooq' version '9.0'
    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.jooq:jooq:3.19.1'
    implementation 'org.jooq:jooq-codegen:3.19.1'
    implementation 'org.jooq:jooq-postgres-extensions:3.19.1'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.postgresql:postgresql'
    implementation 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    jooqGenerator 'org.postgresql:postgresql'
}

jooq {
    version = dependencyManagement.importedProperties['jooq.version']
    configurations {
        first {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/chatdb'
                    user = 'postgres'
                    password = 'sa'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                    }
                    target {
                        packageName = 'com.api.chat.tables'
                        clean = true
                    }
                }
            }
        }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}